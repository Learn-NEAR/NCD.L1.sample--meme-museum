{"version":3,"file":"museum.js","sources":["../node_modules/near-sdk-js/lib/near-bindgen.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-contract.js","../node_modules/near-sdk-js/lib/utils.js","../node_modules/near-sdk-js/lib/collections/vector.js","../node_modules/near-sdk-js/lib/collections/unordered-set.js","../src/utils.ts","../src/museum/models.ts","../src/museum/contract.ts"],"sourcesContent":["export function call(target, key, descriptor) {\n}\nexport function view(target, key, descriptor) {\n}\nexport function NearBindgen(target) {\n    return class extends target {\n        static _init() {\n            // @ts-ignore\n            let args = target.deserializeArgs();\n            let ret = new target(args);\n            // @ts-ignore\n            ret.init();\n            // @ts-ignore\n            ret.serialize();\n            return ret;\n        }\n        static _get() {\n            let ret = Object.create(target.prototype);\n            return ret;\n        }\n    };\n}\n","const U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\nexport function log(...params) {\n    env.log(`${params\n        .map(x => x === undefined ? 'undefined' : x) // Stringify undefined\n        .map(x => typeof (x) === 'object' ? JSON.stringify(x) : x) // Convert Objects to strings\n        .join(' ')}` // Convert to string\n    );\n}\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return env.read_register(0);\n}\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return env.read_register(0);\n}\nexport function blockIndex() {\n    return env.block_index();\n}\nexport function blockHeight() {\n    return blockIndex();\n}\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\nexport function epochHeight() {\n    return env.epoch_height();\n}\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\nexport function usedGas() {\n    return env.used_gas();\n}\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    let ret = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (ret === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\nexport function panic(msg) {\n    if (msg !== undefined) {\n        env.panic(msg);\n    }\n    else {\n        env.panic();\n    }\n}\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\nexport function storageRead(key) {\n    let ret = env.storage_read(key, 0);\n    if (ret === 1n) {\n        return env.read_register(0);\n    }\n    else {\n        return null;\n    }\n}\nexport function storageHasKey(key) {\n    let ret = env.storage_has_key(key);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128PairingCheck(value) {\n    let ret = env.alt_bn128_pairing_check(value);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function jsvmAccountId() {\n    env.jsvm_account_id(0);\n    return env.read_register(0);\n}\nexport function jsvmJsContractName() {\n    env.jsvm_js_contract_name(0);\n    return env.read_register(0);\n}\nexport function jsvmMethodName() {\n    env.jsvm_method_name(0);\n    return env.read_register(0);\n}\nexport function jsvmArgs() {\n    env.jsvm_args(0);\n    return env.read_register(0);\n}\nexport function jsvmStorageWrite(key, value) {\n    let exist = env.jsvm_storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmStorageRead(key) {\n    let exist = env.jsvm_storage_read(key, 0);\n    if (exist === 1n) {\n        return env.read_register(0);\n    }\n    return null;\n}\nexport function jsvmStorageRemove(key) {\n    let exist = env.jsvm_storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmStorageHasKey(key) {\n    let exist = env.jsvm_storage_has_key(key);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmCallRaw(contractName, method, args) {\n    env.jsvm_call(contractName, method, JSON.stringify(args), 0);\n    return env.read_register(0);\n}\nexport function jsvmCall(contractName, method, args) {\n    let ret = jsvmCallRaw(contractName, method, args);\n    if (ret === null) {\n        return ret;\n    }\n    return JSON.parse(ret);\n}\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER);\n}\nexport function jsvmValueReturn(value) {\n    env.jsvm_value_return(value);\n}\n// Standalone only APIs\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return env.read_register(0);\n}\nexport function input() {\n    env.input(0);\n    return env.read_register(0);\n}\nexport function storageUsage() {\n    return env.storage_usage();\n}\nexport function accountBalance() {\n    return env.account_balance();\n}\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\nexport function valueReturn(value) {\n    env.value_return(value);\n}\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\nexport function promiseAnd(...promiseIndex) {\n    return env.promise_and(...promiseIndex);\n}\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\nexport var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\nexport function promiseResult(resultIdx) {\n    let status = env.promise_result(resultIdx, 0);\n    if (status == PromiseResult.Successful) {\n        return env.read_register(0);\n    }\n    else if (status == PromiseResult.Failed ||\n        status == PromiseResult.NotReady) {\n        return status;\n    }\n    else {\n        panic(`Unexpected return code: ${status}`);\n    }\n}\nexport function promiseReturn(promiseIdx) {\n    env.promise_return(promiseIdx);\n}\nexport function storageWrite(key, value) {\n    let exist = env.storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageRemove(key) {\n    let exist = env.storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageByteCost() {\n    return 10000000000000000000n;\n}\n","import * as near from \"./api\";\nexport class NearContract {\n    deserialize() {\n        const rawState = near.storageRead(\"STATE\");\n        if (rawState) {\n            const state = JSON.parse(rawState);\n            // reconstruction of the contract class object from plain object\n            let c = this.default();\n            Object.assign(this, state);\n            for (const item in c) {\n                if (c[item].constructor?.deserialize !== undefined) {\n                    this[item] = c[item].constructor.deserialize(this[item]);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Contract state is empty\");\n        }\n    }\n    serialize() {\n        near.storageWrite(\"STATE\", JSON.stringify(this));\n    }\n    static deserializeArgs() {\n        let args = near.input();\n        return JSON.parse(args || \"{}\");\n    }\n    static serializeReturn(ret) {\n        return JSON.stringify(ret);\n    }\n    init() { }\n}\n","export function u8ArrayToBytes(array) {\n    let ret = \"\";\n    for (let e of array) {\n        ret += String.fromCharCode(e);\n    }\n    return ret;\n}\n// TODO this function is a bit broken and the type can't be string\n// TODO for more info: https://github.com/near/near-sdk-js/issues/78\nexport function bytesToU8Array(bytes) {\n    let ret = new Uint8Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        ret[i] = bytes.charCodeAt(i);\n    }\n    return ret;\n}\nexport function bytes(strOrU8Array) {\n    if (typeof strOrU8Array == \"string\") {\n        return checkStringIsBytes(strOrU8Array);\n    }\n    else if (strOrU8Array instanceof Uint8Array) {\n        return u8ArrayToBytes(strOrU8Array);\n    }\n    throw new Error(\"bytes: expected string or Uint8Array\");\n}\nfunction checkStringIsBytes(str) {\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) > 255) {\n            throw new Error(`string ${str} at index ${i}: ${str[i]} is not a valid byte`);\n        }\n    }\n    return str;\n}\nexport function assert(b, str) {\n    if (b) {\n        return;\n    }\n    else {\n        throw Error(\"assertion failed: \" + str);\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes } from \"../utils\";\nconst ERR_INDEX_OUT_OF_BOUNDS = \"Index out of bounds\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nfunction indexToKey(prefix, index) {\n    let data = new Uint32Array([index]);\n    let array = new Uint8Array(data.buffer);\n    let key = u8ArrayToBytes(array);\n    return prefix + key;\n}\n/// An iterable implementation of vector that stores its content on the trie.\n/// Uses the following map: index -> element\nexport class Vector {\n    constructor(prefix) {\n        this.length = 0;\n        this.prefix = prefix;\n    }\n    len() {\n        return this.length;\n    }\n    isEmpty() {\n        return this.length == 0;\n    }\n    get(index) {\n        if (index >= this.length) {\n            return null;\n        }\n        let storageKey = indexToKey(this.prefix, index);\n        return JSON.parse(near.storageRead(storageKey));\n    }\n    /// Removes an element from the vector and returns it in serialized form.\n    /// The removed element is replaced by the last element of the vector.\n    /// Does not preserve ordering, but is `O(1)`.\n    swapRemove(index) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else if (index + 1 == this.length) {\n            return this.pop();\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            let last = this.pop();\n            if (near.storageWrite(key, JSON.stringify(last))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    push(element) {\n        let key = indexToKey(this.prefix, this.length);\n        this.length += 1;\n        near.storageWrite(key, JSON.stringify(element));\n    }\n    pop() {\n        if (this.isEmpty()) {\n            return null;\n        }\n        else {\n            let lastIndex = this.length - 1;\n            let lastKey = indexToKey(this.prefix, lastIndex);\n            this.length -= 1;\n            if (near.storageRemove(lastKey)) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    replace(index, element) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            if (near.storageWrite(key, JSON.stringify(element))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    extend(elements) {\n        for (let element of elements) {\n            this.push(element);\n        }\n    }\n    [Symbol.iterator]() {\n        return new VectorIterator(this);\n    }\n    clear() {\n        for (let i = 0; i < this.length; i++) {\n            let key = indexToKey(this.prefix, i);\n            near.storageRemove(key);\n        }\n        this.length = 0;\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let vector = new Vector(data.prefix);\n        vector.length = data.length;\n        return vector;\n    }\n}\nexport class VectorIterator {\n    constructor(vector) {\n        this.current = 0;\n        this.vector = vector;\n    }\n    next() {\n        if (this.current < this.vector.len()) {\n            let value = this.vector.get(this.current);\n            this.current += 1;\n            return { value, done: false };\n        }\n        return { value: null, done: true };\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes, bytesToU8Array } from \"../utils\";\nimport { Vector } from \"./vector\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nexport class UnorderedSet {\n    constructor(prefix) {\n        this.length = 0;\n        this.prefix = prefix;\n        this.elementIndexPrefix = prefix + \"i\";\n        let elementsPrefix = prefix + \"e\";\n        this.elements = new Vector(elementsPrefix);\n    }\n    len() {\n        return this.elements.len();\n    }\n    isEmpty() {\n        return this.elements.isEmpty();\n    }\n    serializeIndex(index) {\n        let data = new Uint32Array([index]);\n        let array = new Uint8Array(data.buffer);\n        return u8ArrayToBytes(array);\n    }\n    deserializeIndex(rawIndex) {\n        let array = bytesToU8Array(rawIndex);\n        let data = new Uint32Array(array.buffer);\n        return data[0];\n    }\n    contains(element) {\n        let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n        return near.storageHasKey(indexLookup);\n    }\n    set(element) {\n        let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n        if (near.storageRead(indexLookup)) {\n            return false;\n        }\n        else {\n            let nextIndex = this.len();\n            let nextIndexRaw = this.serializeIndex(nextIndex);\n            near.storageWrite(indexLookup, nextIndexRaw);\n            this.elements.push(element);\n            return true;\n        }\n    }\n    remove(element) {\n        let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n        let indexRaw = near.storageRead(indexLookup);\n        if (indexRaw) {\n            if (this.len() == 1) {\n                // If there is only one element then swap remove simply removes it without\n                // swapping with the last element.\n                near.storageRemove(indexLookup);\n            }\n            else {\n                // If there is more than one element then swap remove swaps it with the last\n                // element.\n                let lastElement = this.elements.get(this.len() - 1);\n                if (!lastElement) {\n                    throw new Error(ERR_INCONSISTENT_STATE);\n                }\n                near.storageRemove(indexLookup);\n                // If the removed element was the last element from keys, then we don't need to\n                // reinsert the lookup back.\n                if (lastElement != element) {\n                    let lastLookupElement = this.elementIndexPrefix + JSON.stringify(lastElement);\n                    near.storageWrite(lastLookupElement, indexRaw);\n                }\n            }\n            let index = this.deserializeIndex(indexRaw);\n            this.elements.swapRemove(index);\n            return true;\n        }\n        return false;\n    }\n    clear() {\n        for (let element of this.elements) {\n            let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n            near.storageRemove(indexLookup);\n        }\n        this.elements.clear();\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    [Symbol.iterator]() {\n        return this.elements[Symbol.iterator]();\n    }\n    extend(elements) {\n        for (let element of elements) {\n            this.set(element);\n        }\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let set = new UnorderedSet(data.prefix);\n        // reconstruct UnorderedSet\n        set.length = data.length;\n        // reconstruct Vector\n        let elementsPrefix = data.prefix + \"e\";\n        set.elements = new Vector(elementsPrefix);\n        set.elements.length = data.elements.length;\n        return set;\n    }\n}\n","import { assert, near, Vector } from \"near-sdk-js\";\nimport { Meme } from \"./meme/models\";\nimport { Museum } from \"./museum/models\";\n\nexport enum Category {\n  A,\n  B,\n  C,\n  D,\n}\n\nexport const ONE_NEAR = BigInt(10e24);\nexport const XCC_GAS = BigInt(2 * 10e14);\nexport const MIN_ACCOUNT_BALANCE = ONE_NEAR * BigInt(3);\n\n// common keys for singlton instances and initialization\nexport const MEME_KEY = \"state\";\nexport const MUSEUM_KEY = \"state\";\n\n// size constraints\nexport const PAGE_SIZE = 10;\nexport const MAX_COMMENT_LENGTH = 500;\n\nexport function getLast<T>(vector: Vector, n: number = PAGE_SIZE): Array<T> {\n  const returnArray = new Array<T>(0);\n\n  for (let i = vector.len() - n - 1; i < vector.len(); i++) {\n    returnArray.push(vector.get(i) as T);\n  }\n\n  return returnArray;\n}\n\nexport function isInitialized(key: string): boolean {\n  return near.storageHasKey(key);\n}\n\nexport function isCreator(): boolean {\n  return near.predecessorAccountId() === Meme.get().creator;\n}\n\nexport function assertIsInitialized(key: string): void {\n  assert(isInitialized(key), \"Contract is not initialized\");\n}\n\nexport function assertIsNotInitialized(key: string): void {\n  assert(!isInitialized(key), \"Contract is already initialized\");\n}\n\nexport function assertIsSignedByCreator(): void {\n  assert(isCreator(), \"This method can only be called by the meme creator\");\n}\n\nexport function assertReasonableCommentLength(text: string): void {\n  assert(\n    text.length < MAX_COMMENT_LENGTH,\n    `Comment is too long, must be less than ${MAX_COMMENT_LENGTH}`\n  );\n}\n\nexport function assertIsSignerPredecessor(): void {\n  assert(\n    near.signerAccountId() === near.predecessorAccountId(),\n    \"Users must call this method directly\"\n  );\n}\n\nexport function fullAccount(meme: string): string {\n  return `${meme}.${near.currentAccountId()}`;\n}\n","import { near } from \"near-sdk-js\";\nimport { MUSEUM_KEY } from \"../utils\";\n\nexport class Museum {\n  created_at: bigint = near.blockTimestamp() as bigint;\n\n  constructor(public name: string) {}\n\n  // ----------------------------------------------------------------------------\n  // Basic functions\n  // ----------------------------------------------------------------------------\n\n  static get(): Museum {\n    return JSON.parse(near.storageRead(MUSEUM_KEY));\n  }\n\n  static set(museum: Museum): void {\n    near.storageWrite(MUSEUM_KEY, JSON.stringify(museum));\n  }\n}\n","import { readFileSync } from \"fs\";\nimport {\n  assert,\n  bytes,\n  call,\n  near,\n  NearBindgen,\n  NearContract,\n  UnorderedSet,\n  view,\n} from \"near-sdk-js\";\nimport {\n  assertIsInitialized,\n  Category,\n  fullAccount,\n  MIN_ACCOUNT_BALANCE,\n  MUSEUM_KEY,\n  XCC_GAS,\n} from \"../utils\";\nimport { Museum } from \"./models\";\n\nconst CODE = readFileSync(\"../../build/meme.wasm\", \"utf8\").toString();\n\nBigInt.prototype[\"toJSON\"] = function () {\n  return this.toString();\n};\n\n@NearBindgen\nexport class MuseumContract extends NearContract {\n  private memes: UnorderedSet;\n  private contributors: UnorderedSet;\n  private owners: UnorderedSet;\n\n  constructor({\n    owners,\n    name,\n    defaultCall,\n  }: {\n    owners?: string[];\n    name?: string;\n    defaultCall: boolean;\n  }) {\n    super();\n\n    if (defaultCall) {\n      return;\n    }\n\n    this.memes = new UnorderedSet(\"memes\");\n    this.contributors = new UnorderedSet(\"contributors\");\n    this.owners = new UnorderedSet(\"owners\");\n\n    // contract may only be initialized once\n    assertIsInitialized(MUSEUM_KEY);\n\n    // storing meme metadata requires some storage staking (balance locked to offset cost of data storage)\n    assert(\n      near.attachedDeposit() > MIN_ACCOUNT_BALANCE,\n      `Minimum account balance must be attached to initialize this contract (${MIN_ACCOUNT_BALANCE})`\n    );\n\n    // Must have least 1 owner account\n    assert(owners.length > 0, \"Must specify at least 1 owner\");\n\n    // create the museum using incoming metadata\n    assert(name.length > 0, \"Museum name may not be blank\");\n    // save the museum to storage\n    Museum.set(new Museum(name));\n\n    // capture the owners\n    this.owners.extend(owners);\n\n    near.log(\"museum was created\");\n  }\n\n  default() {\n    return new MuseumContract({ defaultCall: true });\n  }\n\n  @view\n  get_museum(): Museum {\n    assertIsInitialized(MUSEUM_KEY);\n    return Museum.get();\n  }\n\n  @view\n  get_owner_list(): string[] {\n    assertIsInitialized(MUSEUM_KEY);\n    return this.owners.toArray();\n  }\n\n  @view\n  get_meme_list(): string[] {\n    assertIsInitialized(MUSEUM_KEY);\n    return this.memes.toArray();\n  }\n\n  @view\n  get_meme_count(): number {\n    assertIsInitialized(MUSEUM_KEY);\n    return this.memes.len();\n  }\n\n  /**\n   * Manage your status as a contributor\n   */\n  @call\n  add_myself_as_contributor(): void {\n    assertIsInitialized(MUSEUM_KEY);\n    this.contributors.set(near.predecessorAccountId());\n  }\n\n  @call\n  remove_myself_as_contributor(): void {\n    assertIsInitialized(MUSEUM_KEY);\n    this.contributors.remove(near.predecessorAccountId());\n  }\n\n  /**\n   * Add your meme\n   */\n  @call\n  add_meme({\n    meme,\n    title,\n    data,\n    category,\n  }: {\n    meme: string;\n    title: string;\n    data: string;\n    category: Category;\n  }): void {\n    assertIsInitialized(MUSEUM_KEY);\n    this.assertIsOwnerOrContributor();\n\n    // storing meme metadata requires some storage staking (balance locked to offset cost of data storage)\n    assert(\n      near.attachedDeposit() > MIN_ACCOUNT_BALANCE,\n      `Minimum account balance must be attached to initialize this contract (${MIN_ACCOUNT_BALANCE})`\n    );\n\n    const accountId = fullAccount(meme);\n\n    // assert(\n    //   env.isValidAccountID(accountId),\n    //   \"Meme name must be valid NEAR account name\"\n    // );\n    assert(this.memes.contains(accountId), \"Meme name already exists\");\n\n    near.log(\"attempting to create meme\");\n\n    const promise = near.promiseBatchCreate(accountId);\n    near.promiseBatchActionCreateAccount(promise);\n    near.promiseBatchActionDeployContract(promise, CODE);\n    near.promiseBatchActionAddKeyWithFullAccess(\n      promise,\n      near.signerAccountPk(),\n      0\n    );\n    near.promiseBatchActionFunctionCall(\n      promise,\n      \"init\",\n      bytes(JSON.stringify({ title, data, category })),\n      near.attachedDeposit(),\n      XCC_GAS\n    );\n\n    const then = near.promiseThen(\n      promise,\n      near.currentAccountId(),\n      \"on_meme_created\",\n      bytes(JSON.stringify({ meme })),\n      0,\n      XCC_GAS\n    );\n\n    return near.promiseReturn(then);\n  }\n\n  @call\n  on_meme_created({ meme }: { meme: string }): void {\n    const results = near.promiseResult(0);\n\n    // Verifying the remote contract call succeeded.\n    // https://nomicon.io/RuntimeSpec/Components/BindingsSpec/PromisesAPI.html?highlight=promise#returns-3\n    if (results === near.PromiseResult.Failed) {\n      near.log(`Meme creation for [ ${fullAccount(meme)} ] failed`);\n    } else if (results === near.PromiseResult.NotReady) {\n      near.log(`Meme creation for [ ${fullAccount(meme)} ] is pending`);\n    } else {\n      near.log(`Meme creation for [ ${fullAccount(meme)} ] succeeded`);\n    }\n  }\n\n  /*\n   * Governance methods reserved for 101Labs and NEAR admins\n   */\n  @call\n  add_contributor({ account }: { account: string }): void {\n    assertIsInitialized(MUSEUM_KEY);\n    this.assertIsSignedByOwner();\n\n    this.contributors.set(account);\n\n    near.log(\"contributor was added\");\n  }\n\n  @call\n  remove_contributor({ account }: { account: string }): void {\n    assertIsInitialized(MUSEUM_KEY);\n    this.assertIsSignedByOwner();\n\n    this.contributors.remove(account);\n  }\n\n  @call\n  add_owner({ account }: { account: string }): void {\n    assertIsInitialized(MUSEUM_KEY);\n    this.assertIsSignedByOwner();\n\n    this.owners.set(account);\n  }\n\n  @call\n  remove_owner({ account }: { account: string }): void {\n    assertIsInitialized(MUSEUM_KEY);\n    this.assertIsSignedByOwner();\n\n    this.owners.remove(account);\n  }\n\n  @call\n  remove_meme({ meme }: { meme: string }): void {\n    assertIsInitialized(MUSEUM_KEY);\n    this.assertIsSignedByOwner();\n\n    const promise = near.promiseBatchCreate(fullAccount(meme));\n    near.promiseBatchActionDeleteAccount(promise, near.currentAccountId());\n    const then = near.promiseThen(\n      promise,\n      near.currentAccountId(),\n      \"on_meme_removed\",\n      bytes(JSON.stringify({ meme })),\n      0,\n      XCC_GAS\n    );\n\n    return near.promiseReturn(then);\n  }\n\n  @call\n  on_meme_removed({ meme }: { meme: string }): void {\n    // TODO: confirm that promise was successful\n    near.log(`[ ${fullAccount(meme)} ] was removed`);\n    this.memes.remove(meme);\n  }\n\n  private assertIsOwnerOrContributor(): void {\n    assert(\n      this.contributors.contains(near.predecessorAccountId()) ||\n        this.owners.contains(near.predecessorAccountId()),\n      \"This method can only be called by a museum contributor or owner\"\n    );\n  }\n\n  private assertIsSignedByOwner(): void {\n    assert(\n      this.owners.contains(near.signerAccountId()),\n      \"This method can only be called by a museum owner\"\n    );\n  }\n}\n"],"names":["call","target","key","descriptor","view","NearBindgen","_init","args","deserializeArgs","ret","init","serialize","_get","Object","create","prototype","U64_MAX","EVICTED_REGISTER","log","params","env","map","x","undefined","JSON","stringify","join","signerAccountId","signer_account_id","read_register","signerAccountPk","signer_account_pk","predecessorAccountId","predecessor_account_id","blockTimestamp","block_timestamp","attachedDeposit","attached_deposit","panic","msg","storageRead","storage_read","storageHasKey","storage_has_key","storageGetEvicted","currentAccountId","current_account_id","input","promiseThen","promiseIndex","accountId","methodName","amount","gas","promise_then","promiseBatchCreate","promise_batch_create","promiseBatchActionCreateAccount","promise_batch_action_create_account","promiseBatchActionDeployContract","code","promise_batch_action_deploy_contract","promiseBatchActionFunctionCall","promise_batch_action_function_call","promiseBatchActionAddKeyWithFullAccess","publicKey","nonce","promise_batch_action_add_key_with_full_access","promiseBatchActionDeleteAccount","beneficiaryId","promise_batch_action_delete_account","PromiseResult","promiseResult","resultIdx","status","promise_result","Successful","Failed","NotReady","promiseReturn","promiseIdx","promise_return","storageWrite","value","exist","storage_write","storageRemove","storage_remove","NearContract","deserialize","rawState","near","state","parse","c","default","assign","item","constructor","Error","serializeReturn","u8ArrayToBytes","array","e","String","fromCharCode","bytesToU8Array","bytes","Uint8Array","length","i","charCodeAt","strOrU8Array","checkStringIsBytes","str","assert","b","ERR_INDEX_OUT_OF_BOUNDS","ERR_INCONSISTENT_STATE","indexToKey","prefix","index","data","Uint32Array","buffer","Vector","len","isEmpty","get","storageKey","swapRemove","pop","last","push","element","lastIndex","lastKey","replace","extend","elements","Symbol","iterator","VectorIterator","clear","toArray","v","vector","current","next","done","UnorderedSet","elementIndexPrefix","elementsPrefix","serializeIndex","deserializeIndex","rawIndex","contains","indexLookup","set","nextIndex","nextIndexRaw","remove","indexRaw","lastElement","lastLookupElement","Category","ONE_NEAR","BigInt","XCC_GAS","MIN_ACCOUNT_BALANCE","MUSEUM_KEY","isInitialized","assertIsInitialized","fullAccount","meme","Museum","created_at","name","museum","CODE","readFileSync","toString","MuseumContract","owners","defaultCall","memes","contributors","get_museum","get_owner_list","get_meme_list","get_meme_count","add_myself_as_contributor","remove_myself_as_contributor","add_meme","title","category","assertIsOwnerOrContributor","promise","then","on_meme_created","results","add_contributor","account","assertIsSignedByOwner","remove_contributor","add_owner","remove_owner","remove_meme","on_meme_removed"],"mappings":"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"}